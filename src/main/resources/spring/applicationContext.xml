<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:context="http://www.springframework.org/schema/context"
xmlns:mvc="http://www.springframework.org/schema/mvc"
xmlns:jdbc="http://www.springframework.org/schema/jdbc"
xmlns:jee="http://www.springframework.org/schema/jee"
xmlns:aop="http://www.springframework.org/schema/aop"
xmlns:tx="http://www.springframework.org/schema/tx"
xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/mvc
http://www.springframework.org/schema/mvc/spring-mvc.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx.xsd
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop.xsd">
	<!-- spring的配置文件 ，主要是配置是和业务 bean -->
	<!-- 业务方面 包括 事务处理，连接数据库。等 -->
	
	<!-- spring 也需要扫描，除了 controller 不扫描 -->
	<context:component-scan base-package="maven.example">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	 <context:property-placeholder location="classpath:db/jdbc.properties" />
	
	<!--c3p0 数据库链接 主要是事务处理，数据源 -->
	<bean id ="pooledDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" >
		<property name="jdbcUrl" value="${jdbcUrl}"></property>
		<property name="driverClass" value="${driverClass}" ></property>
		<property name="user" value ="${user}"></property>
		<property name="password" value="${password}"></property>
	</bean>
	<!-- ================================================myabits 整合配置  start===================== -->
	<!-- 配置mybatis 整合spring  -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
			<!-- mybaits的配置文件存放路径 -->
			<property name="configLocation" value="classpath:mybatis/mybatis-config.xml"></property>
			<!-- mybaits  启用哪个数据源 -->
			<property name="dataSource" ref="pooledDataSource"></property>
			<!-- 使用那些mapper文件 -->
			<property name="mapperLocations" value="classpath:mapper/*.xml"></property>
	</bean>
	 
	<!-- 配置扫描器 ，将mybiats的接口加到ioc容器中 --> 
	<bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 扫描所有的dao的实现，放ioc容器中 -->
		<property name="basePackage" value="maven_example.simple.dao"></property>
	</bean>
	<!-- ================================================myabits 整合配置  end ===================== -->
	
	
	
	
	<!-- 事务处理 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
			<!-- 控制数据源 -->
		<property name="dataSource" ref="pooledDataSource"></property>
	</bean>
	<!-- 基于注解的事务 ，配置xml的 事务  用到spring的ioc aop 了，之前老师说的竟然都可以配置了 -->
	<aop:config>
		<!-- 切面 = 切点+ 时间  -->
		<!--切点表达式 -->
		<aop:pointcut expression="execution(* maven_example.simple.service..*(..))" id="txpointcut"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txpointcut"/>
	</aop:config>
	
	<!-- 配置 事物增强 ，事物如何切入  transaction-manager="transactionManager" 和事务管理器连上-->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- 所有方法都切入 -->
			<tx:method name="*"/>
				<!-- 已get开始的都切入 稍微优化下 -->
			<tx:method name="get*" read-only="true"/>
		</tx:attributes>
			 
	</tx:advice>
	
	<!-- spring 配置主要   数据源 + mybaits 整合 +  事物处理配置 -->
	
	
</beans>